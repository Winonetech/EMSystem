<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:vos="emap.map2d.vos.*" width="240" height="580">
	<fx:Declarations>
		
	  
		
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import editor.core.EDConfig;
			import editor.managers.ImageManager;
			
			import emap.consts.StepStyleConsts;
			import emap.core.em;
			import emap.map2d.Position;
			import emap.map2d.core.E2Config;
			import emap.map2d.core.E2Provider;
			import emap.map2d.vos.E2VOPosition;
			import emap.map2d.vos.E2VOPositionType;
			
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.ColorPickerEvent;
			
			import spark.events.TextOperationEvent;
			[Bindable]
			
			private var collection:ArrayCollection;
			private function iconChange(event:Event):void
			{
				if(event.target.selected && position)
				{
					position.iconVisible = true;
					EDConfig.instance.e2Config.positionViewMap[position.id].iconChange(position.iconVisible);
				}else
				{
					position.iconVisible = false;
					EDConfig.instance.e2Config.positionViewMap[position.id].iconChange(position.iconVisible);
				}
			}
			private function labelChange(event:Event):void
			{
				
				if(event.target.selected && position)
				{
					position.labelVisible = true;
					EDConfig.instance.e2Config.positionViewMap[position.id].labelChange(position.labelVisible);
				}else
				{
					position.labelVisible = false;
					EDConfig.instance.e2Config.positionViewMap[position.id].labelChange(position.labelVisible);
				}
			}
			public  function set dataProvider($value:Object):void
			{
				collection = new ArrayCollection($value as Array);
			}
			[Bindable]
			public function get position():E2VOPosition
			{
				return _position;
			}
			public function set position($value:E2VOPosition):void
			{
				_position = $value;
				positionTypeVO = E2Provider.instance.positionTypeMap[_position.positionTypeID];
			}
			[Bindable]
			private var positionTypeVO:E2VOPositionType;
			
			
			private var _position:E2VOPosition;
			
			protected function submit_clickHandler(event:MouseEvent):void
			{
				if(EDConfig.instance.e2Config.positionViewMap[position.id]){
					EDConfig.instance.e2Config.utilLayer.clear();
					position.color = c.selectedColor;
					EDConfig.instance.e2Config.positionViewMap[position.id].update(); 
					EDConfig.instance.e2Config.positionViewMap[position.id].editStep = false;
//					
				}
				
			}
			
			protected function change($positionProperty:String, $ui:*,  $uiProperty:String):void
			{
				if(position!=null)
				{
					position[$positionProperty] = $ui[$uiProperty];
					EDConfig.instance.e2Config.positionViewMap[position.id].update(); 
				}
				
			}
			protected function changeType():void
			{
				if(position!=null)
				{
					position.positionTypeID = (positionType.selectedItem as E2VOPositionType).id;
			
				}
			}
			protected function editor_clickHandler(event:MouseEvent):void
			{
				if(_position)
					EDConfig.instance.e2Config.utilLayer.position = EDConfig.instance.e2Config.positionViewMap[_position.id];
					setEmpty.enabled = true;
			}
			protected function empty_clickHandler(event:MouseEvent):void
			{
				if(position != null){
					
					
					EDConfig.instance.e2Config.utilLayer.clear();
					EDConfig.instance.e2Config.setEditor = true;
					EDConfig.instance.e2Config.positionViewMap[position.id].editStep = true;
					
					EDConfig.instance.e2Config.editorStyle = StepStyleConsts.MOVE_TO;
				}
			}
			
			protected function iconChange_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(_position)
				{
					var file:File = new File;
					var fileFilter:FileFilter = new FileFilter("png,jpg","*.jpg;*.png");
					file.addEventListener(Event.SELECT,changeImage);
					file.browseForOpen("请选择楼层图片",[fileFilter]);
					
				}
			}
			protected function changeImage(event:Event):void
			{
				ImageManager.removeImage(_position.icon);
				_position.icon = ImageManager.registImage(event.target.url,"cache/image");
				EDConfig.instance.e2Config.positionViewMap[_position.id].changeIcon();
			}
			
			protected function hslider1_changeHandler(event:Event):void
			{
			 	if(_position)
				{
					_position.iconRotation = rot.value;
					EDConfig.instance.e2Config.positionViewMap[_position.id].updateIconLayout();
				}
			}
			
			protected function icon_changeHandler(event:Event):void
			{
				if(_position)
				{
					_position.iconScale = iconScale.value; 
					EDConfig.instance.e2Config.positionViewMap[position.id].iconScaleChange(iconScale.value); 
				}
				
			}
			
			protected function checkbox1_changeHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function labelScale_changeHandler(event:Event):void
			{
				if(_position)
				{
					_position.labelScale = ls.value;
					EDConfig.instance.e2Config.positionViewMap[position.id].labelScaleChange(ls.value);
				}
				
			}
			
			protected function c_changeHandler(event:ColorPickerEvent):void
			{
				if(position != null)
				{
					position.color = c.selectedColor;
					EDConfig.instance.e2Config.positionViewMap[position.id].update();
				}
				
			}
			
		]]>
	</fx:Script>
	<s:Label x="13" y="10" text="图标"/>
	<mx:HRule x="0" y="28" width="100%" height="1"/>
	<s:Label x="20" y="40" text="名称:"/>
	
	<s:TextInput x="97" id="lb" y="33" width="86" text="{position.label}" change="change('label',lb,'text')"/>
	<mx:HRule x="0" y="59" width="100%" height="1"/>
	<s:Label x="20" y="69" text="颜色："/>
	<mx:ColorPicker id="c" x="98" y="61" width="25" height="22" selectedColor="{position.color}" change="c_changeHandler(event)"/>
	<mx:HRule x="0" y="86" width="100%" height="1"/>
	<s:Label x="20" y="93" text="图标:"/>
	<s:TextInput id="i" x="98" y="89" width="84" text="{position.icon}" editable="false" change="change('icon',i,'text')"/>
		
	<s:Button x="189" y="89" width="44" label="浏览" click="iconChange_clickHandler(event)" skinClass="editor.skin.PropertyButtonSkin"/>
	<mx:HRule x="0" y="114" width="100%" height="1"/>

	<s:Label x="20" y="125" text="图标X："/>
	<s:TextInput id="ix" x="98" y="117" width="84" text="{position.iconOffsetX}" change="change('iconOffsetX',ix,'text')" restrict="0-9/."/>
	<mx:HRule x="0" y="144" width="100%" height="1"/>
	
	<s:Label x="20" y="153" text="图标Y："/>
	<s:TextInput id="iy" x="98" y="147" width="84" text="{position.iconOffsetY}" change="change('iconOffsetY',iy,'text')" restrict="0-9/."/>
	<mx:HRule x="0" y="172" width="100%" height="1"/>
	<s:Label x="20" y="180" text="图标缩放："/>
	<!--<s:TextInput id="s" x="99" y="175" width="84" text="{position.iconScale}" change="change('iconScale',s,'text')" restrict="0-9/."/> -->
	<s:HSlider id ="iconScale"  x="99" y="181" width="102" maximum="2" stepSize="0.1" value="{position.iconScale}" change="icon_changeHandler(event)"/>
	<mx:HRule x="0" y="231" width="100%" height="1"/>
	<s:Label x="20" y="214" text="图标旋转："/>
	<s:HSlider id="rot" x="101" y="212" maximum="360" value="{position.iconRotation}" change="hslider1_changeHandler(event)"/>
	<mx:HRule x="0" y="201" width="240" height="1"/>
	<s:Label x="20" y="239" text="可见："/>
	<s:CheckBox x="99" y="234" selected="{position.iconVisible}" label="可见" change="iconChange(event)" />
	
	<s:Label x="10" y="272" text="文本"/>
	<mx:HRule x="0" y="290" width="100%" height="4"/>
	
	<mx:HRule x="0" y="256" width="100%" height="1"/>
	
	
	<mx:HRule x="233" y="288" width="100%" height="1"/>
	<s:Label x="20" y="301" text="文本缩放："/>
	<s:HSlider id="ls" x="100" y="297" maximum="4" stepSize="0.1" value="{position.labelScale}" change="labelScale_changeHandler(event)"/>
	<!--<s:TextInput id="ls" x="100" y="297" width="85" text ="{position.labelScale}" change="change('labelScale',ls,'text')" restrict="0-9/."/> -->
	<mx:HRule x="0" y="322" width="100%" height="1"/>
	<s:Label x="20" y="330" text="可见："/>
	<s:CheckBox x="99" y="326" selected="{position.labelVisible}"  label="可见" change="labelChange(event)"/>
	
	<mx:HRule x="0" y="351" width="100%" height="1"/>
	<s:Label x="20" y="359" text="文本X："/>
	<s:TextInput id="lx" x="100" y="355" width="92" text="{position.labelOffsetX}" change="change('labelOffsetX',lx,'text')" restrict="0-9/."/>
	<mx:HRule x="0" y="382" width="100%" height="1"/>
	
	<s:Label x="20" y="393" text="文本Y："/>
	<s:TextInput id="ly" x="100" y="387" width="92" text="{position.labelOffsetY}" change="change('labelOffsetY',ly,'text')" restrict="0-9/."/>
	<mx:HRule x="0" y="415" width="100%" height="1"/>
	<s:Label x="20" y="425" text="颜色："/>
	<mx:ColorPicker id="n" x="99" y="420" width="25" selectedColor="{position.labelColor}" change="change('labelColor',n,'selectedColor')"/>
	<mx:HRule x="0" y="446" width="100%" height="1" />
	
	<s:Label x="20" y="455" text="高度："/>
	<s:TextInput id="t" x="99" y="450" width="92" text="{position.thick}" change="change('thick',t,'text')" restrict="0-9/."/>
	<mx:HRule x="0" y="476" width="100%" height="1"/>
	<s:Label x="20" y="488" text="楼层："/>
	<s:TextInput id="f" x="98" y="481" width="92" text="{position.floorID}" editable="false" change="change('floorID',f,'text')"/>
	<mx:HRule x="0" y="507" width="100%" height="1"/>
	

	<s:Label x="20" y="518" text="位置类型："/>
	<s:ComboBox id="positionType" x="99" y="512" width="91" dataProvider="{collection}" selectedItem="{positionTypeVO}" change="changeType()"/>
	<mx:HRule x="0" y="539" width="100%" height="1"/>
	<s:Button x="31" y="547" width="47" label="编辑" click="editor_clickHandler(event)" skinClass="editor.skin.PropertyButtonSkin"/>
	
	<s:Button id="setEmpty" x="88" y="547" width="46" label="重绘" enabled="false" click="empty_clickHandler(event)" skinClass="editor.skin.PropertyButtonSkin"/>
	<s:Button x="141" y="547" width="46" label="保存" click="submit_clickHandler(event)" skinClass="editor.skin.PropertyButtonSkin"/>
	<mx:VRule x="87" y="28" width="2" height="228"/>
	<mx:VRule x="89" y="290" width="1" height="250"/>

</s:Group>
