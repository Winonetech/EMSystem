<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300" >
	<s:VGroup id="group" width="100%" height="100%" click="vgroup1_clickHandler(event)" gap ="20" horizontalAlign="center">
		
	</s:VGroup>
	<fx:Declarations>
		
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import editor.core.EDConfig;
			
			import emap.map2d.core.E2Provider;
			import emap.map2d.vos.E2VOFloor;
			import emap.map2d.vos.E2VOPosition;
			private var lastPlate:PositionPlate;
			public function addPosition(position:E2VOPosition):void
			{
				var positionPlate:PositionPlate = new PositionPlate();
				positionPlate.position = position;
				group.addElement(positionPlate);
				if(position ==EDConfig.instance.selectedPosition)
				{
					positionPlate.selected = true;
					lastPlate = positionPlate;
				}
//				EDConfig.instance.selectedPosition = position;
//				if(lastPlate)
//					lastPlate.selected = false
//				lastPlate = positionPlate;
//				positionPlate.selected = true;
			}
			public function addNewPosition(position:E2VOPosition):void
			{
				var positionPlate:PositionPlate = new PositionPlate();
				positionPlate.position = position;
				group.addElement(positionPlate);
				
				EDConfig.instance.selectedPosition = position;
				if(lastPlate)
					lastPlate.selected = false
				lastPlate = positionPlate;
				positionPlate.selected = true;
			}
			public function addPositionByFloor($value:E2VOFloor):void
			{
				group.removeAllElements();
				for each (var p:E2VOPosition in E2Provider.instance.positionArr)
				{
					if(p.floorID==$value.id)
					{
						addPosition(p);
					}
				}
			}
			public function subPosition ():void
			{
				if(lastPlate)
					group.removeElement(lastPlate);
			}
			
			protected function vgroup1_clickHandler(event:MouseEvent):void
			{
				//防止前一个位置还在编辑
				if(EDConfig.instance.selectedPosition)
				{
					EDConfig.instance.e2Config.utilLayer.clear();
					if(EDConfig.instance.e2Config.positionViewMap[EDConfig.instance.selectedPosition.id])
					{
						EDConfig.instance.e2Config.positionViewMap[EDConfig.instance.selectedPosition.id].update(); 
						EDConfig.instance.e2Config.positionViewMap[EDConfig.instance.selectedPosition.id].editStep = false;
				
					}
				}
				 
				if (event.target is PositionPlate)
				{
					var item:PositionPlate = event.target as PositionPlate;
					if(lastPlate)
					{
						lastPlate.selected = false;
						lastPlate = item;
					}
					else lastPlate = item;
					if(item.selected)
						item.selected = false;
					else
						item.selected = true;

					EDConfig.instance.selectedPosition= item.position;
					EDConfig.instance.propertyPanel.setCurrentState("position",true);
					EDConfig.instance.propertyPanel.position.position = EDConfig.instance.selectedPosition;
					EDConfig.instance.propertyPanel.position.dataProvider = E2Provider.instance.positionTypeArr;
					EDConfig.instance.e2Config.utilLayer.positionSelected(EDConfig.instance.e2Config.positionViewMap[item.position.id]);
				}
			}
			
		]]>
	</fx:Script>
</s:Scroller>
