<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s ="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   creationComplete="init()"
					   backgroundAlpha="0" showStatusBar="false" width="960" height="540">
	<fx:Declarations>
		<s:RadioButtonGroup id="modeRadio" change="modeRadio_changeHandler(event)"/>
		<s:RadioButtonGroup id="floorRadio" change="floorRadio_changeHandler(event)"/>
	</fx:Declarations>
	<s:HGroup gap="30">
		<s:HGroup>
			<s:RadioButton label="平移" value="move" group="{modeRadio}" color="0xFFFFFF" selected="true"/>
			<s:RadioButton label="旋转" value="rotate" group="{modeRadio}" color="0xFFFFFF"/>
		</s:HGroup>
		<s:HGroup id="floorsMenu"/>
		<s:Button label="search" click="button_clickHandler(event)"/>
	</s:HGroup>
	
	
	<fx:Script>
		<![CDATA[
			import cn.vision.collections.Map;
			import cn.vision.system.VSFile;
			import cn.vision.utils.FileUtil;
			import cn.vision.utils.MathUtil;
			
			import com.winonetech.core.Store;
			
			import emap.core.EMConfig;
			import emap.interfaces.INode;
			import emap.map3d.EMap3D;
			import emap.map3d.vos.E3VONode;
			import emap.map3d.vos.E3VOPosition;
			import emap.map3d.vos.E3VORoute;
			import emap.tools.SourceManager;
			import emap.utils.NodeUtil;
			import emap.vos.VOFloor;
			import emap.vos.VONode;
			import emap.vos.VOPosition;
			import emap.vos.VOPositionType;
			
			import mx.core.UIComponent;
			/* 
			[Embed(source="fonts/MSYH.TTC",fontName="msyh", embedAsCFF="false")]
			public var fontMSYH:Class;
			 */
			private function init():void
			{
				var container:UIComponent = new UIComponent;
				addElementAt(container, 0);
				
				
				var config:EMConfig = new EMConfig(getXML("data/emporium.xml"));
				
				
				map = new EMap3D(config);
				container.addChild(map);
				map.width = width;
				map.height = height;
				initializeData(map);
			}
			
			private function initializeData(map:EMap3D):void
			{
				var xml:XML = getXML("data/floors.xml");
				var list:XMLList = xml.children();
				var floorsMap:Map = new Map;
				for each (var item:XML in list)
				{
					var floor:VOFloor = store.registData(item, VOFloor);
					floorsMap[floor.id] = floor;
					var radio:RadioButton = new RadioButton;
					radio.label = floor.label;
					radio.value = floor.id;
					radio.setStyle("color", 0xFFFFFF);
					radio.group = floorRadio;
					floorsMenu.addElement(radio);
				}
				
				xml = getXML("data/positionTypes.xml");
				list = xml.children();
				var positionTypesMap:Map = new Map;
				for each (item in list)
				{
					var positionType:VOPositionType =store.registData(item, VOPositionType);
					positionTypesMap[positionType.id] = positionType;
				}
				
				xml = getXML("data/positions.xml");
				list = xml.children();
				var positionsArr:Array = [];
				var serialsMap:Map = new Map;
				for each (item in list)
				{
					var position:E3VOPosition = store.registData(item, E3VOPosition);
					store.registData(position, INode);
					positionsArr[positionsArr.length] = position;
					position.floor = floorsMap[position.floorID];
					position.positionType = positionTypesMap[position.positionTypeID];
					serialsMap[position.serial] = position;
				}
				
				xml = getXML("data/nodes.xml");
				list = xml.children();
				var nodesMap:Map = new Map;
				for each (item in list)
				{
					var node:E3VONode = store.registData(item, E3VONode);
					store.registData(node, INode);
					nodesMap[node.id] = node;
					node.floor = floorsMap[node.floorID];
					serialsMap[node.serial] = node;
				}
				
				xml = getXML("data/routes.xml");
				list = xml.children();
				var routesMap:Map = new Map;
				for each (item in list)
				{
					var route:E3VORoute = store.registData(item, E3VORoute);
					routesMap[route.id] = route;
					route.node1 = serialsMap[route.serial1];
					route.node2 = serialsMap[route.serial2];
				}
				
				map.initializePosition = "1";
				map.floors = floorsMap;
				map.positionTypes = positionTypesMap;
				map.positions = positionsArr;
				map.nodes = nodesMap;
				map.routes = routesMap;
				
			}
			
			private var map:EMap3D;
			
			
			private function getXML(path:String):XML
			{
				var file:VSFile = new VSFile(FileUtil.resolvePathApplication(path));
				var stream:FileStream = new FileStream;
				stream.open(file, FileMode.READ);
				var temp:String = stream.readUTFBytes(stream.bytesAvailable);
				return XML(temp);
			}
			
			private var store:Store = Store.instance;
			
			protected function modeRadio_changeHandler(event:Event):void
			{
				map.mode = modeRadio.selectedValue as String;
			}
			
			protected function floorRadio_changeHandler(event:Event):void
			{
				map.viewFloor(floorRadio.selectedValue, true);
			}
			
			protected function button_clickHandler(event:MouseEvent):void
			{
				map.find("192168001016-20150802142503-4A3C0DRW", "192168001016-20150802142503-WF2X45TH");
			}
			
		]]>
	</fx:Script>
</s:WindowedApplication>
